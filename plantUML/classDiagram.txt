@startuml
Mode <|-- SynchMode
Mode <|-- AsynchMode

Class Mode {
 + Mode()
 +{abstract} generateSymulatedData()
 +{abstract} printFinalInformation()
 +{abstract} initProcedures()
 +{abstract} getContext()
 +{abstract} getDeviceHandle()
 +{abstract} proceedWithInitUsb()
 +{abstract} closeLibUsb()
 +{abstract} doTest()=0
 #_bufforSize
 #_count
 #_vid
 #_pid
 #_timeResult
 #_debugPrinter
 #_printOnlyResult
 #_ctx
 #_dev_handle
}

class SynchMode {
 +SynchMode()
 +{abstract} doTest()
}

class AsynchMode {
 +AsynchMode()
 +{abstract} doTest()
 +{abstract} initProcedures()
 +{abstract} closeLibUsb()
 -_sender_lock
 -_receiver_lock
 -_sender_cond
 -_receiver_cond
 -_senderTransfer
 -_receiverTransfer
 -_receiverThread
}

@enduml


public:
	AsynchMode();
	virtual ~AsynchMode();
	virtual int doTest() override;
	virtual void initProcedures() override;

	void closeLibUsb() override;
private:
	pthread_mutex_t _sender_lock;
	pthread_mutex_t _receiver_lock;
	pthread_cond_t _sender_cond;
	pthread_cond_t _receiver_cond;

	libusb_transfer* _senderTransfer;
	libusb_transfer* _receiverTransfer;
	pthread_t _receiverThread;

	SynchMode();
	virtual ~SynchMode();
	virtual int doTest() override;


	virtual int generateSymulatedData();
	virtual void printFinalInformation();
	virtual void initProcedures();
	virtual void getContext();
	virtual void getDeviceHandle();
	virtual void proceedWithInitUsb();
	virtual void closeLibUsb();